name: Build & Publish Artifacts

permissions:
  contents: write    # to upload assets to the Release

on:
  release:
    types:
      - created
      - prereleased
      - published

jobs:
  build:
    name: Build & Upload Tauri Bundles
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'      # Apple Silicon
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'      # Intel
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: pnpm build

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Linux system deps
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Build & Release with Tauri Action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Use the existing tag/release info
          tagName:     ${{ github.event.release.tag_name }}
          releaseName: ${{ github.event.release.name }}
          releaseBody: ${{ github.event.release.body }}
          releaseDraft: ${{ github.event.release.draft }}
          prerelease:   ${{ github.event.release.prerelease }}
          # Pass your build targets per‚Äêmatrix
          args:         ${{ matrix.args }}
