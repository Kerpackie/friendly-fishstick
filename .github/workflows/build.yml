name: Build & Publish Artifacts

permissions:
  contents: write    # to upload assets to the Release

on:
  # 1️⃣ Manual trigger: supply the tag of the release you want to update
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag of the existing release to update (e.g. v1.2.0-rc.1)'
        required: true
      prerelease:
        description: 'Is this a prerelease?'
        required: true
        default: 'true'
        type: boolean

  # 2️⃣ Automatic on true releases—skip rc/beta
  release:
    types: [created, prereleased, published]

jobs:
  build:
    name: Build & Upload Tauri Bundles
    runs-on: ${{ matrix.platform }}
    # Only run on:
    #   • workflow_dispatch (manual) OR
    #   • release events whose tag doesn’t contain “rc” or “-beta”
    if: |
      github.event_name == 'workflow_dispatch' ||
      ( github.event_name == 'release' &&
        !contains(github.event.release.tag_name, 'rc') &&
        !contains(github.event.release.tag_name, '-beta')
      )
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'; args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'; args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04';   args: ''
          - platform: 'windows-latest';  args: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install & build frontend
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add macOS Rust targets
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: Install Linux system deps
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Build & Release with Tauri Action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Pick up the tag & prerelease flag from either the manual inputs or the release event
          tagName:     ${{ github.event.inputs.release_tag || github.event.release.tag_name }}
          releaseName: ${{ github.event.inputs.release_tag || github.event.release.name }}
          releaseBody: ${{ github.event.release.body }}
          releaseDraft: ${{ github.event.release.draft }}
          prerelease:   ${{ github.event.inputs.prerelease || github.event.release.prerelease }}
          args:         ${{ matrix.args }}
